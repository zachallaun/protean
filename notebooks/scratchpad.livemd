# Scratchpad

## Section

```elixir
alias Protean.{MachineConfig}
```

Defining the state machine in terms of state nodes and transitions.

I think the internal types for these should be relatively rigid and normalized by a transformation step that can occur to get from machine config to these types.

```elixir
machine = [
  initial: :state_a,
  states: [
    state_a: [
      on: [
        "event.b": :state_b,
        "event.b2": :"state_b.state_b2"
      ]
    ],
    state_b: [
      initial: :state_b1,
      states: [
        state_b1: [
          on: [
            "event.b2": :state_b2
          ]
        ],
        state_b2: [
          on: [
            "event.c": :"#state_c"
          ]
        ]
      ]
    ],
    state_c: [
      type: :final
    ]
  ]
]

MachineConfig.parse!(machine)
```
